@function rem($size: 16) {
  $base: 16;
  @return #{($size / $base)}rem;
}

$hamburguer-width:  24px;
$hamburguer-height:  2px;
$hamburguer-spacing: 5px;
$hamburguer-border-radius: 1px;
$hamburguer-color: #fff;
$hamburguer-hover-color: #fff;
$hamburguer-transition: 0.3s;

@mixin hamburger-icon (
    $width: $hamburguer-width,
    $height: $hamburguer-height,
    $spacing: $hamburguer-spacing,
    $border-radius: $hamburguer-border-radius,
    $color: $hamburguer-color,
    $hover-color: $hamburguer-hover-color,
    $transition: $hamburguer-transition ) {
  width: $width;
  height: $height * 3 + $spacing * 2;
  cursor: pointer;
  background: none;
  border: 0;
  margin: 0;
  padding: 0;
  outline: none;
  overflow: visible;
  position: relative;
  transition: opacity $transition linear;
  padding: 10px;
  box-sizing: content-box;
  > span {
    position: relative;
    top: 0;
    box-shadow: 0 7px 15px 0 rgba(0, 0, 0, 0.15);
    transition: transform $transition ease-in,
                background-color 0.1s ease-in;

    &,
    &:before,
    &:after {
      display: block;
      left: 0;
      height: $height;
      width:  $width;
      background-color: $color;
      border-radius: $border-radius;
    }

    &:before,
    &:after {
      position: absolute;
      content: "";
      transition: transform $transition ease,
                  background-color 0.1s ease-in;
    }

    &:before { top:    -($height + $spacing); }
    &:after  { bottom: -($height + $spacing); }
  }

  &:hover span {
    &, &:after, &:before {
      background-color: $hover-color;
    }
  }

  &.-open {
    > span {
      background-color: transparent;
      transition: transform $transition ease-in;

      &:before {
        transform: translate3d(0, $height + $spacing, 0) rotate(45deg);
      }

      &:after {
        transform: translate3d(0, ($height + $spacing) * -1, 0) rotate(-45deg);
      }
    }
  }
}

@mixin arrow($width, $border-width, $deg) {
  display: block;
  content: "";
  top: 50%;
  left: 50%;
  width: $width;
  height: $width;
  // you need specify border-color
  border-top: $border-width solid;
  border-left: $border-width solid;
  transform: translate(-50%, -50%) rotate($deg);
  pointer-events: none;
  transition: .2s ease-in;
}
